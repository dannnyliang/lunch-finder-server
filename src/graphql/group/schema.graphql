# ----- basic types -----
type Group @entity {
  id: ID! @id
  name: String! @column
  members: [User!] @link
  options: [Restaurant!] @link
}

type PagedGroup {
  docs: [Group!]!
  total: Int!
  limit: Int!
  page: Int!
}

# ----- input types -----
input GroupsQuery {
  name: String
  members: [String!]
  options: [String!]
}

input CreateGroupInput {
  name: String!
  members: [String!]
  options: [String!]
}

input UpdateGroupInput {
  name: String
  members: [String!]
  options: [String!]
}

# ----- query and muate -----
extend type Query {
  groups(query: GroupsQuery, page: Int, limit: Int, sort: String): PagedGroup
}

extend type Mutation {
  createGroup(payload: CreateGroupInput!): Group
  updateGroup(id: ID!, payload: UpdateGroupInput!): Group
  removeGroup(id: ID!): String
}
