# ----- basic types -----
type Restaurant @entity {
  id: ID! @id
  name: String! @column
  address: String! @column
  description: String @column
  averagePrice: Int @column
}

type PagedRestaurant {
  docs: [Restaurant!]!
  total: Int!
  limit: Int!
  page: Int!
}

# ----- input types -----
input RestaurantsQuery {
  name: String
  address: String
  averagePrice: Int
}

input CreateRestaurantInput {
  name: String!
  address: String!
  description: String
  averagePrice: Int
}

input UpdateRestaurantInput {
  name: String
  address: String
  description: String
  averagePrice: Int
}

# ----- query and muate -----
extend type Query {
  restaurants(
    query: RestaurantsQuery
    page: Int
    limit: Int
    sort: String
  ): PagedRestaurant
}

extend type Mutation {
  createRestaurant(payload: CreateRestaurantInput!): Restaurant
  updateRestaurant(id: ID!, payload: UpdateRestaurantInput!): Restaurant
  removeRestaurant(id: ID!): String
}